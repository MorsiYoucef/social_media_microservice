apiVersion: v1
kind: Namespace
metadata:
  name: microservices
---
# API GATEWAY
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway
  namespace: microservices
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api-gateway
  template:
    metadata:
      labels:
        app: api-gateway
    spec:
      containers:
      - name: api-gateway
        image: social_media_microservice-api-gateway:latest
        imagePullPolicy: Never  # ADD THIS
        ports:
        - containerPort: 3000
        envFrom:
        - secretRef:
            name: microservices-env
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "512Mi"
            cpu: "500m"

---

apiVersion: v1
kind: Service
metadata:
  name: api-gateway
  namespace: microservices
spec:
  type: NodePort
  selector:
    app: api-gateway
  ports:
  - port: 3000
    targetPort: 3000
    nodePort: 30000

---
# IDENTITY SERVICE
apiVersion: apps/v1
kind: Deployment
metadata:
  name: identity-service
  namespace: microservices
spec:
  replicas: 1
  selector:
    matchLabels:
      app: identity-service
  template:
    metadata:
      labels:
        app: identity-service
    spec:
      containers:
      - name: identity-service
        image: 	social_media_microservice-identity-service:latest
        imagePullPolicy: Never  # ADD THIS
        ports:
        - containerPort: 3001
        envFrom:
        - secretRef:
            name: microservices-env
        resources:
          requests:
            memory: "128Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"

---

apiVersion: v1
kind: Service
metadata:
  name: identity-service
  namespace: microservices
spec:
  type: ClusterIP  # Change to ClusterIP (internal)
  selector:
    app: identity-service
  ports:
  - port: 3001
    targetPort: 3001



---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: media-service
  namespace: microservices
spec:
  replicas: 1
  selector:
    matchLabels:
      app: media-service
  template:
    metadata:
      labels:
        app: media-service
    spec:
      containers:
      - name: media-service
        image: social_media_microservice-media-service:latest
        imagePullPolicy: Never  # ADD THIS
        ports:
        - containerPort: 3003
        envFrom:
        - secretRef:
            name: microservices-env
        resources:
          requests:
            memory: "128Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"

---

apiVersion: v1
kind: Service
metadata:
  name: media-service
  namespace: microservices
spec:
  type: NodePort
  selector:
    app: media-service
  ports:
  - port: 3003
    targetPort: 3003
    nodePort: 30003


---


apiVersion: apps/v1
kind: Deployment
metadata:
  name: post-service
  namespace: microservices
spec:
  replicas: 1
  selector:
    matchLabels:
      app: post-service
  template:
    metadata:
      labels:
        app: post-service
    spec:
      containers:
      - name: post-service
        image: social_media_microservice-post-service:latest
        imagePullPolicy: Never  # ADD THIS
        ports:
        - containerPort: 3002
        envFrom:
        - secretRef:
            name: microservices-env
        resources:
          requests:
            memory: "128Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"

---

apiVersion: v1
kind: Service
metadata:
  name: post-service
  namespace: microservices
spec:
  type: NodePort
  selector:
    app: post-service
  ports:
  - port: 3002
    targetPort: 3002
    nodePort: 30002


---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq
  namespace: microservices
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      containers:
      - name: rabbitmq
        image: rabbitmq:3-management
        ports:
        - containerPort: 5672
        - containerPort: 15672
        # FIXED READINESS PROBE
        readinessProbe:
          exec:
            command:
            - rabbitmq-diagnostics
            - status
          initialDelaySeconds: 120  # Increased from 10
          periodSeconds: 20
          timeoutSeconds: 10
          failureThreshold: 5
        # ADDED LIVENESS PROBE
        livenessProbe:
          exec:
            command:
            - rabbitmq-diagnostics
            - status
          initialDelaySeconds: 180
          periodSeconds: 30
          timeoutSeconds: 10
        # UPDATED RESOURCE LIMITS
        resources:
          requests:
            memory: "512Mi"  # Increased from 128Mi
            cpu: "500m"
          limits:
            memory: "1Gi"    # Increased from 512Mi
            cpu: "1"
        # ADDED ENVIRONMENT VARIABLES
        env:
        - name: RABBITMQ_DEFAULT_USER
          value: "guest"
        - name: RABBITMQ_DEFAULT_PASS
          value: "guest"

---

apiVersion: v1
kind: Service
metadata:
  name: rabbitmq
  namespace: microservices
spec:
  type: ClusterIP
  selector:
    app: rabbitmq
  ports:
    - name: amqp             # <— name required for port 5672
      port: 5672
      targetPort: 5672
    - name: management       # <— name required for port 15672
      port: 15672
      targetPort: 15672

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: microservices
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: redis:alpine
        ports:
        - containerPort: 6379
        resources:
          requests:
            memory: "128Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "500m"

---

apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: microservices
spec:
  type: ClusterIP
  selector:
    app: redis
  ports:
  - port: 6379
    targetPort: 6379

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: search-service
  namespace: microservices
spec:
  replicas: 1
  selector:
    matchLabels:
      app: search-service
  template:
    metadata:
      labels:
        app: search-service
    spec:
      containers:
      - name: search-service
        image: social_media_microservice-search-service:latest
        imagePullPolicy: Never  # ADD THIS
        ports:
        - containerPort: 3004
        envFrom:
        - secretRef:
            name: microservices-env
        resources:
          requests:
            memory: "128Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"

---


apiVersion: v1
kind: Service
metadata:
  name: search-service
  namespace: microservices
spec:
  type: NodePort
  selector:
    app: search-service
  ports:
  - port: 3004
    targetPort: 3004
    nodePort: 30004

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: chat-service
  namespace: microservices
spec:
  replicas: 1
  selector:
    matchLabels:
      app: chat-service
  template:
    metadata:
      labels:
        app: chat-service
    spec:
      containers:
      - name: chat-service
        image: social_media_microservice-chat-service:latest
        imagePullPolicy: Never  # ADD THIS
        ports:
        - containerPort: 3005
        envFrom:
        - secretRef:
            name: microservices-env
        resources:
          requests:
            memory: "128Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"

---
apiVersion: v1
kind: Service
metadata:
  name: chat-service
  namespace: microservices
spec:
  type: NodePort
  selector:
    app: chat-service
  ports:
  - port: 3005
    targetPort: 3005
    nodePort: 30005

---

---
# SECRET (only one)
apiVersion: v1
kind: Secret
metadata:
  name: microservices-env
  namespace: microservices
stringData:
  REDIS_URL: "redis://redis:6379"
  RABBITMQ_URL: "amqp://rabbitmq:5672"